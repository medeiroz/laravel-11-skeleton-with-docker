name: Deploy

on:
  push:
    branches:
      - main
env:
  # Setting an environment variable with the value of a configuration variable
  env_var: ${{ vars.ENV_CONTEXT_VAR }}

jobs:
  build:
    environment: production
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build with Docker
        run: docker build -t ${{ vars.APP_SLUG }} -f .docker/prod/Dockerfile .

      - name: Package the application
        run: tar -czf artifact.tar.gz .

      - name: Save artifact
        uses: actions/upload-artifact@v4
        with:
          name: artifact
          path: artifact.tar.gz

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: artifact
          path: .

      - name: Copy artifact via SCP to server
        uses: appleboy/scp-action@v0.1.7
        with:
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          host: ${{ secrets.SSH_HOST }}
          port: ${{ secrets.SSH_PORT }}
          source: artifact.tar.gz
          target: /app/

      - name: Deploy environment variables
        uses: appleboy/ssh-action@v1.0.3
        with:
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          host: ${{ secrets.SSH_HOST }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            cd /app
            rm -f .env
            echo "APP_NAME=${{ vars.APP_NAME }}" >> .env
            echo "APP_ENV=${{ vars.APP_ENV }}" >> .env
            echo "APP_KEY=${{ vars.APP_KEY }}" >> .env
            echo "APP_DEBUG=${{ vars.APP_DEBUG }}" >> .env
            echo "APP_URL=${{ vars.APP_URL }}" >> .env
            echo "LOG_CHANNEL=${{ vars.LOG_CHANNEL }}" >> .env
            echo "LOG_LEVEL=${{ vars.LOG_LEVEL }}" >> .env
            echo "DB_CONNECTION=${{ vars.DB_CONNECTION }}" >> .env
            echo "DB_HOST=${{ secrets.DB_HOST }}" >> .env
            echo "DB_PORT=${{ secrets.DB_PORT }}" >> .env
            echo "DB_DATABASE=${{ secrets.DB_DATABASE }}" >> .env
            echo "DB_USERNAME=${{ secrets.DB_USERNAME }}" >> .env
            echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env
            echo "SESSION_DRIVER=${{ vars.SESSION_DRIVER }}" >> .env
            echo "FILESYSTEM_DISK=${{ vars.FILESYSTEM_DISK }}" >> .env
            echo "QUEUE_CONNECTION=${{ vars.QUEUE_CONNECTION }}" >> .env
            echo "CACHE_STORE=${{ vars.CACHE_STORE }}" >> .env
            echo "CACHE_PREFIX=${{ vars.CACHE_PREFIX }}" >> .env
            echo "REDIS_HOST=${{ vars.REDIS_HOST }}" >> .env
            echo "REDIS_PASSWORD=${{ vars.REDIS_PASSWORD }}" >> .env
            echo "REDIS_PORT=${{ vars.REDIS_PORT }}" >> .env
            echo "MAIL_MAILER=${{ vars.MAIL_MAILER }}" >> .env
            echo "MAIL_HOST=${{ vars.MAIL_HOST }}" >> .env
            echo "MAIL_PORT=${{ vars.MAIL_PORT }}" >> .env
            echo "MAIL_USERNAME=${{ secrets.MAIL_USERNAME }}" >> .env
            echo "MAIL_PASSWORD=${{ secrets.MAIL_PASSWORD }}" >> .env
            echo "MAIL_ENCRYPTION=${{ vars.MAIL_ENCRYPTION }}" >> .env
            echo "MAIL_FROM_ADDRESS=${{ vars.MAIL_FROM_ADDRESS }}" >> .env
            echo "MAIL_FROM_NAME=${{ vars.MAIL_FROM_NAME }}" >> .env
            echo "VITE_APP_NAME=${{ vars.VITE_APP_NAME }}" >> .env

      - name: Start deployment
        uses: appleboy/ssh-action@v1.0.3
        with:
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          host: ${{ secrets.SSH_HOST }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            cd /app
            tar -xzf artifact.tar.gz
            rm artifact.tar.gz
            whoami
            ls -la
