services:

    #PHP Service
    skeleton-app:
        container_name: skeleton-app
        build:
            context: .
            dockerfile: .docker/local/Dockerfile
        restart: unless-stopped
        working_dir: /app
        volumes:
            - ./:/app
        networks:
            - src_default
        extra_hosts:
            - "host.docker.internal:host-gateway"
        ports:
            - '${FORWARD_APP_PORT:-8001}:80'
            - '${APP_PORT:-9000}:9000'
            - '3000:3000'
            - '3001:3001'
            - '5173:5173'
        depends_on:
            - skeleton-redis
            - skeleton-db

    #Nginx Service
    skeleton-webserver:
        container_name: skeleton-webserver
        image: nginx:alpine
        restart: unless-stopped
        ports:
            - "${FORWARD_APP_PORT:-8001}:80"
        volumes:
            - ./:/app
            - .docker/local/nginx/:/etc/nginx/conf.d/
            - ./storage/logs/:/var/log/nginx/
        networks:
            - src_default
        depends_on:
            - skeleton-app

    # Database
    skeleton-db:
        container_name: skeleton-db
        image: mysql:latest
        restart: always
        environment:
            MYSQL_DATABASE: '${DB_DATABASE}'
            MYSQL_USER: '${DB_USERNAME}'
            MYSQL_PASSWORD: '${DB_PASSWORD}'
            MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'
            MYSQL_ROOT_HOST: "%"
        networks:
            - src_default
        volumes:
            - db-data:/var/lib/mysql
        ports:
            - '${FORWARD_DB_PORT:-3306}:3306'

    #Redis
    skeleton-redis:
        container_name: skeleton-redis
        image: redis:5-alpine
        volumes:
            - redis-data:/data
        restart: unless-stopped
        networks:
            - src_default

#Docker Networks
networks:
    src_default:

#Docker Volumes
volumes:
    db-data:
        driver: local
    redis-data:
        driver: local
